// https://leetcode.com/problems/reverse-linked-list/?envType=list&envId=p1bbr2f5

**********************************************************************************************************************************************************************
Optimal - Iterative Approach
Idea - Start with three pointers: previous, current, and next. Move through the list, reversing the next pointer of each node to point to the previous node.
At the end, the previous pointer will be the new head of the reversed Linked List.

TC - O(n)
SC - O(1)

public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;

        while(curr != null){
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
}
