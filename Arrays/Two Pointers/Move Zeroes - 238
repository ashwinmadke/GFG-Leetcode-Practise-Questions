// https://leetcode.com/problems/move-zeroes/

Brute Force :
Idea - Create a temp array, copy all non-zero elements into it, and fill the rest with zeros before copying back to the original array.
TC - O(n)
SC - O(n)

public void moveZeroes(int[] nums) {
        // using extra space
        int n = nums.length;
        int[] temp = new int[n];
        int index = 0;

        //copy non-zero element to temp
        for(int i=0; i<n; i++){
            if(nums[i] != 0){
                temp[index++] = nums[i];
            }
        }

        //fill zeroes to remaining place (in java its alread 0)

        // copy back temp to org
        for(int i=0; i<n; i++){
            nums[i] = temp[i];
        }
    }

Optimal - Two Pointers
Idea - Use two pointers; whenever you encounter a zero, skip it, otherwise swap it with the other pointer. In the end, all zeros will move to the end.
TC - O(n)
SC - O(1)


public void moveZeroes(int[] nums) {
        int n = nums.length;
        int i = 0;
        int j = 0;

        while(i < n){
            if(nums[i] != 0){
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                j++;
            }
            i++;
        }
    }
