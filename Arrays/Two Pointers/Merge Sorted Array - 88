// https://leetcode.com/problems/merge-sorted-array/

Brute Force - 
// TC-> O((m+n)log(m+n)) or O(Klogk) where k is m+n
// SC-> O(1)

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        //copy the elements of nums2 to the end of nums1 and sort nums1
        for(int i =0; i<n; i++){
            nums1[m+i] = nums2[i];
        }
        Arrays.sort(nums1);
    }
}


//two pointers approach
//tc - O(m+n), sc - O(1)
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m-1;
        int j = n-1;
        int k = m+n-1;

        //merging from end
        while(i >= 0 && j >= 0){
            if(nums1[i] > nums2[j]){
                nums1[k--] = nums1[i--];
            }
            else{
                nums1[k--] = nums2[j--];
            }
        }
        //copy remaining elements from nums2
        while( j >= 0){
            nums1[k--] = nums2[j--];
        }       
    }
