// https://www.geeksforgeeks.org/problems/count-number-of-hops-1587115620/1

//Recursive code
// Time Complexity - O(2^n)
// Space Complexity - O(n) + O(n) = O(2n) -> O(n)

// Function to count the number of ways in which frog can reach the top.
    static int countWays(int n) {
       return recur(0, n);
    }
    
    private static int recur(int i, int n){
        //base case
        if(i == n) return 1;
        
        if(i > n) return 0;
        
        return recur(i+1, n) + recur(i+2, n) + recur(i+3, n);
}

